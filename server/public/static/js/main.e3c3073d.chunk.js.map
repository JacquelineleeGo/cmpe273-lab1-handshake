{"version":3,"sources":["utils/history.js","layouts/BlankLayout.jsx","utils/request.js","utils/index.js","pages/user/model/service.js","pages/user/model/index.js","pages/user/login/index.js","pages/user/register/index.js","pages/user/logout/index.js","pages/user/index.jsx","layouts/components/GlobalHeader/index.js","layouts/BasicLayout.jsx","pages/home/index.jsx","pages/student/profile/components/ProfileBasic.jsx","pages/student/profile/components/ProfileEducation.jsx","pages/student/profile/components/ProfileExperience.jsx","pages/student/model/service.js","pages/student/model/index.js","pages/student/profile/index.jsx","pages/student/profile/components/ProfileForm.jsx","pages/student/profile/create/index.jsx","pages/student/profile/edit/index.jsx","pages/student/application/index.jsx","pages/student/index.jsx","pages/company/profile/components/ProfileBasic.jsx","pages/company/model/service.js","pages/company/model/index.js","pages/company/profile/index.jsx","pages/company/profile/components/ProfileForm.jsx","pages/company/profile/create/index.jsx","pages/company/profile/edit/index.jsx","pages/company/job/components/JobList.jsx","pages/company/model/job.js","pages/company/job/index.jsx","pages/company/job/components/JobForm.jsx","pages/company/job/create/index.jsx","pages/company/job/edit/index.jsx","pages/company/job/components/ApplicationStatusForm.jsx","pages/company/job/components/JobApplications.jsx","pages/company/job/applications/index.jsx","pages/company/index.jsx","pages/search/components/SearchForm.jsx","pages/search/index.jsx","pages/search/service.js","common/routes/index.js","common/redux/reducer.js","common/redux/model/index.js","common/redux/configStore.js","index.js","Root.jsx"],"names":["history","createHashHistory","Content","Layout","Footer","BasicLayout","props","className","children","fetchInstance","axios","create","baseURL","withCredentials","interceptors","request","use","config","headers","localStorage","getItem","error","Promise","reject","response","data","token","setItem","message","status","push","window","location","register","post","login","initialState","loading","id","username","email","userSlice","createSlice","name","reducers","asyncStart","state","asyncFinish","asyncError","registerSuccess","action","payload","loginSuccess","initSuccess","clearUserInfo","actions","reducer","effects","init","_","dispatch","a","get","result","api","qs","parse","search","slice","redirect","console","log","href","layout","labelCol","span","wrapperCol","tailLayout","offset","connect","user","bindActionCreators","Form","useForm","form","initialValues","remember","onFinish","values","onFinishFailed","errorInfo","Item","label","rules","required","Password","type","htmlType","to","formItemLayout","xs","sm","tailFormItemLayout","RegistrationForm","useDispatch","scrollToFirstError","title","QuestionCircleOutlined","whitespace","Option","value","hasFeedback","dependencies","getFieldValue","validator","rule","resolve","Logout","useEffect","removeItem","Routes","path","useRouteMatch","render","Header","pathname","useLocation","theme","mode","selectedKeys","style","lineHeight","key","useSelector","GlobalHeader","icon","SmileOutlined","role","gutter","bordered","shape","birth_date","city","country","skillset","career_objective","college","major","degree","year_of_passing","items","map","el","index","company_name","start_date","end_date","queryProfile","createProfile","updateProfile","put","queryApplications","uid","profileSlice","Profile","student","ProfileBasic","profileBasic","ProfileEducation","profileEducation","ProfileExperience","profileExperience","ProfileForm","onSubmit","basic","education","college_name","experience","handleUpdate","created_at","update_at","success","ApplicationsPage","useState","jobs","setJobs","rowKey","columns","dataIndex","dataSource","pagination","exact","description","contact_email","contact_phone","createJob","updateJob","jid","queryJobApplications","updateJobApplicationStatus","aid","company","text","record","list","jobSlice","application","updateOne","findIndex","splice","updateList","updateApplication","updateApplicationOne","Job","job","length","JobList","JobForm","application_deadline","useParams","currentJob","find","Number","Select","CollectionSubmitForm","initial","visible","onCancel","okText","cancelText","onOk","validateFields","then","resetFields","catch","info","placeholder","allowClear","setVisible","current","setCurrent","onClick","handleSubmit","ApplicationStatusForm","JobApplications","AdvancedSearchForm","textAlign","marginLeft","SearchPage","params","stringify","handleApply","resume","onConfirm","SearchForm","SiteRoute","globalSlice","count","increment","combineReducers","router","connectRouter","global","globalReducer","userReducer","studentReducer","companyReducer","jobReducer","middleware","routerMiddleware","getDefaultMiddleware","enhancers","preloadedState","store","configureStore","rootReducer","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e3c3073d.chunk.js","sourcesContent":["// import createHistory from 'history/createBrowserHistory';\nimport { createHashHistory } from 'history';\n\n// A singleton history object for easy API navigation\nexport const history = createHashHistory();\n\n","import React from \"react\";\nimport { Layout } from \"antd\";\n\nimport \"./index.css\";\n\nconst { Content, Footer } = Layout;\n\nexport default function BasicLayout(props) {\n\n  return (\n    <Layout className=\"basicLayout--container\">\n      <Content className=\"basicLayout--content\">\n        <div className=\"site-layout-content\">{props.children}</div>\n      </Content>\n      <Footer className=\"basicLayout--footer\">\n      </Footer>\n    </Layout>\n  );\n}\n","import axios from \"axios\";\nimport { message } from \"antd\";\n\nimport { history } from './history';\n\nimport { getToken } from \".\";\n\nconst fetchInstance = axios.create({\n  baseURL: \"/api/\",\n  withCredentials: true\n});\n\nfetchInstance.interceptors.request.use(\n  config => {\n    config.headers[\"Authorization\"] = \"Bearer \" + getToken();\n    return config;\n  },\n  error => {\n    Promise.reject(error);\n  }\n);\n\nfetchInstance.interceptors.response.use(\n  response => {\n    const { data } = response;\n    if (data.token) {\n      localStorage.setItem(\"handShakeToken\", data.token);\n    }\n    if (data.error) {\n      throw data.data;\n    }\n\n    return data.data;\n  },\n  error => {\n    message.error(\"network error::\" + error.message);\n    const { response } = error;\n    if (response.status === 401) {\n      history.push(`/user/login?redirect=${window.location}`);\n    }\n    throw error;\n  }\n);\n\nexport default fetchInstance;\n","export function getToken() {\n    return localStorage.getItem(\"handShakeToken\");\n}\n  \nexport function delToken() {\n    return localStorage.removeItem(\"handShakeToken\");\n}\n","import request from '../../../utils/request';\n\nexport const register = (data) => {\n  return request.post('/user/register', data)\n}\n\nexport const login = (data) => {\n  return request.post('/user/login', data)\n}\n\nexport const init = _ => {\n  return request.get('/user');\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { push } from \"connected-react-router\";\nimport qs from \"qs\";\n\nimport { history } from \"../../../utils/history\";\n\nimport * as api from \"./service\";\n\nconst initialState = {\n  loading: false,\n  error: null,\n  id: 0,\n  username: \"\",\n  email: \"\"\n};\n\nconst userSlice = createSlice({ // dispatch(asyncStart())\n  name: \"user\",\n  initialState,\n  reducers: {\n    asyncStart: state => ({ // action creator\n      ...state,\n      loading: true,\n      error: null\n    }),\n    asyncFinish: state => ({\n      ...state,\n      loading: false,\n      error: null\n    }),\n    asyncError: state => ({\n      ...state,\n      loading: false,\n      error: null\n    }),\n    registerSuccess: (state, action) => ({\n      ...state,\n      ...action.payload\n    }),\n    loginSuccess: (state, action) => ({\n      ...state,\n      ...action.payload\n    }),\n    initSuccess: (state, action) => ({\n      ...state,\n      ...action.payload\n    }),\n    clearUserInfo: (state) => {\n        return initialState;\n    }\n  }\n});\n\nconst { actions, reducer } = userSlice;\n\nconst {\n  asyncStart,\n  asyncFinish,\n  asyncError,\n  registerSuccess,\n  loginSuccess,\n  initSuccess\n} = actions;\n\nconst effects = {\n  \n  init: _ => async dispatch => {\n    dispatch(asyncStart());\n    try {\n      const result = await api.init();\n      dispatch(asyncFinish());\n      dispatch(initSuccess(result));\n    } catch (e) {\n      dispatch(asyncError(e));\n      throw e;\n    }\n  },\n  register: data => async dispatch => {\n    dispatch(asyncStart());\n    try {\n      const result = await api.register(data);\n      dispatch(asyncFinish());\n      dispatch(registerSuccess(result));\n      dispatch(push(\"/user/login\"));\n    } catch (e) {\n      dispatch(asyncError(e));\n      throw e;\n    }\n  },\n  login: data => async dispatch => {\n    dispatch(asyncStart());\n    try {\n      const result = await api.login(data);\n      dispatch(asyncFinish());\n      dispatch(loginSuccess(result));\n      const { location } = history;\n      const { redirect } = qs.parse(location.search.slice(1));\n      console.log(\"redirect:\", redirect);\n\n      if (redirect) {\n        window.location.href = redirect;\n      } else {\n        dispatch(push(\"/home\"));\n      }\n    } catch (e) {\n      dispatch(asyncError(e));\n      throw e;\n    }\n  }\n};\nexport { actions, reducer, effects };\n","import React from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { effects } from \"../model\";\n\nimport \"./index.css\";\n\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\n\nconst NormalLoginForm = props => {\n  const [form] = Form.useForm(); // \n  \n  const onFinish = values => {\n    console.log(\"Success:\", values);\n    const { actions } = props;\n\n    actions.login(values);\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <div className=\"login-form\">\n      <Form\n        form={form}\n        {...layout}\n        name=\"basic\"\n        initialValues={{\n          remember: true\n        }}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n      >\n        <Form.Item\n          label=\"Email\"\n          name=\"email\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your email!\"\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Password\"\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your password!\"\n            }\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n\n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Login\n          </Button>\n          <div>\n            Or <Link to=\"/user/register\">register now!</Link>\n          </div>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ user }) => ({\n  ...user\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    actions: bindActionCreators(\n      {\n        ...effects\n      },\n      dispatch\n    )\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(NormalLoginForm);\n","import React from \"react\";\nimport { Form, Input, Tooltip, Select, Button } from \"antd\";\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { effects } from \"../model\";\n\nimport \"./index.css\";\n\nconst formItemLayout = {\n    labelCol: {\n      xs: {\n        span: 24\n      },\n      sm: {\n        span: 8\n      }\n    },\n    wrapperCol: {\n      xs: {\n        span: 24\n      },\n      sm: {\n        span: 16\n      }\n    }\n  };\n  const tailFormItemLayout = {\n    wrapperCol: {\n      xs: {\n        span: 24,\n        offset: 0\n      },\n      sm: {\n        span: 16,\n        offset: 8\n      }\n    }\n  };\n\nconst RegistrationForm = () => {\n    const [form] = Form.useForm();\n  const dispatch = useDispatch();\n\n  const onFinish = values => {\n    console.log(\"Received values of form: \", values);\n    dispatch(effects.register(values));\n  };\n\n    return (\n    <div className=\"register-form\">\n      <Form\n        {...formItemLayout}\n        form={form}\n        name=\"register\"\n        onFinish={onFinish}\n        initialValues={{}}\n        scrollToFirstError\n      >\n        <Form.Item\n          name=\"username\"\n          label={\n            <span>\n              Username&nbsp;\n              <Tooltip title=\"What do you want others to call you?\">\n                <QuestionCircleOutlined />\n              </Tooltip>\n            </span>\n          }\n          rules={[\n            {\n              required: true,\n              message: \"Please input your nickname!\",\n              whitespace: true\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          name=\"email\"\n          label=\"E-mail\"\n          rules={[\n            {\n              type: \"email\",\n              message: \"The input is not valid E-mail!\"\n            },\n            {\n              required: true,\n              message: \"Please input your E-mail!\"\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"Role\" name=\"role\">\n          <Select>\n            <Select.Option value=\"student\">student</Select.Option>\n            <Select.Option value=\"company\">company</Select.Option>\n          </Select>\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          label=\"Password\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your password!\"\n            }\n          ]}\n          hasFeedback\n        >\n          <Input.Password />\n        </Form.Item>\n\n        <Form.Item\n          name=\"passwordConfirmation\"\n          label=\"Confirm Password\"\n          dependencies={[\"password\"]}\n          hasFeedback\n          rules={[\n            {\n              required: true,\n              message: \"Please confirm your password!\"\n            },\n            ({ getFieldValue }) => ({\n              validator(rule, value) {\n                if (!value || getFieldValue(\"password\") === value) {\n                  return Promise.resolve();\n                }\n\n                return Promise.reject(\n                  \"The two passwords that you entered do not match!\"\n                );\n              }\n            })\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n\n        <Form.Item {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Register\n          </Button>\n          <div>\n            Or <Link to=\"/user/login\">go to login!</Link>\n          </div>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default RegistrationForm;\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { push } from \"connected-react-router\";\n\nimport { actions } from \"../model\";\nimport { delToken } from \"../../../utils\";\n\nconst Logout = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    delToken();\n    dispatch(actions.clearUserInfo());\n    dispatch(push(\"/user/login\"));\n  }, [dispatch]);\n\n  return <div>logout...</div>;\n};\n\nexport default Logout;\n","import React from \"react\";\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\";\n\nimport BlankLayout from \"../../layouts/BlankLayout\";\n\nimport LoginPage from \"./login\";\nimport RegisterPage from \"./register\";\nimport LogoutPage from \"./logout\";\n\nexport default function Routes() {\n  const { path } = useRouteMatch();\n\n  return (\n    <BlankLayout>\n      <Switch>\n        <Route path={`${path}/register`}>\n          <RegisterPage />\n        </Route>\n        <Route path={`${path}/login`}>\n          <LoginPage />\n        </Route>\n        <Route path={`${path}/logout`}>\n          <LogoutPage />\n        </Route>\n        <Route render={() => <div>404 Not Found</div>} />\n      </Switch>\n    </BlankLayout>\n  );\n}\n","import React from \"react\";\nimport { Layout, Menu } from \"antd\";\n\n// import { useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\n\nimport { Link } from \"react-router-dom\";\n\nconst { Header } = Layout;\n\nexport default function() {\n  const location = useLocation();\n  const { pathname } = location;\n\n  return (\n    <Header className=\"basicLayout--header\">\n      <div className=\"logo\" />\n      <Menu\n        theme=\"dark\"\n        mode=\"horizontal\"\n        selectedKeys={[pathname]}\n        style={{ lineHeight: \"64px\" }}\n      >\n        <Menu.Item key=\"/home\">\n          <Link to=\"/home\">Home</Link>\n        </Menu.Item>\n        <Menu.Item key=\"/user/logout\">\n          <Link to=\"/user/logout\">Logout</Link>\n        </Menu.Item>\n        {/* {renderRoleMenu()} */}\n      </Menu>\n    </Header>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { Layout } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport GlobalHeader from \"./components/GlobalHeader\";\nimport { effects } from \"../pages/user/model\";\n\nimport \"./index.css\";\n\nconst { Content, Footer } = Layout;\n\nexport default function BasicLayout(props) {\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n\n  useEffect(() => {\n    if (!user.id) {\n      dispatch(effects.init());\n    }\n  }, [dispatch, user.id]);\n\n  if (user.loading) return <div>loading...</div>;\n  if (user.error) return <div>Error.</div>;\n\n  return (\n    <Layout className=\"basicLayout--container\">\n      <GlobalHeader />\n      <Content className=\"basicLayout--content\">\n        <div className=\"site-layout-content\">{props.children}</div>\n      </Content>\n      <Footer className=\"basicLayout--footer\">\n      </Footer>\n    </Layout>\n  );\n}\n","import React from \"react\";\nimport { Button, Result, Card, Col, Row } from \"antd\";\nimport { SmileOutlined } from \"@ant-design/icons\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport BasicLayout from \"../../layouts/BasicLayout\";\n\nexport default function Routes(props) {\n  const user = useSelector(state => state.user);\n\n  return (\n    <BasicLayout>\n      <Result\n        icon={<SmileOutlined />}\n        title={`${user.username}, Welcome to HandShake!`}\n      />\n      {user.role === \"student\" ? (\n        <Row gutter={16}>\n          <Col span={8}>\n            <Card title=\"Profile\" bordered={false}>\n              <Button type=\"primary\" shape=\"round\">\n                <Link to=\"/student/profile\">Go</Link>\n              </Button>\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card title=\"Job Search\" bordered={false}>\n              <Button type=\"primary\" shape=\"round\">\n                <Link to=\"/search\">Go</Link>\n              </Button>\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card title=\"Applications\" bordered={false}>\n              <Button type=\"primary\" shape=\"round\">\n                <Link to=\"/student/application\">Go</Link>\n              </Button>\n            </Card>\n          </Col>\n        </Row>\n      ) : (\n        <Row gutter={16}>\n          <Col span={8}>\n            <Card title=\"Company Profile\" bordered={false}>\n              <Button type=\"primary\" shape=\"round\">\n                <Link to=\"/company/profile\">Go</Link>\n              </Button>\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card title=\"Post Jobs\" bordered={false}>\n              <Button type=\"primary\" shape=\"round\">\n              <Link to=\"/company/job/create\">Go</Link>\n              </Button>\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card title=\"Job Postings\" bordered={false}>\n              <Button type=\"primary\" shape=\"round\">\n              <Link to=\"/company/job\">Go</Link>\n              </Button>\n            </Card>\n          </Col>\n        </Row>\n      )}\n    </BasicLayout>\n  );\n}\n","import React from \"react\";\nimport { Descriptions } from \"antd\";\n\nexport default function(props) {\n  return (\n    <Descriptions title=\"Basic Info\">\n      <Descriptions.Item label=\"name\">{props.name}</Descriptions.Item>\n      <Descriptions.Item label=\"birth\">{props.birth_date}</Descriptions.Item>\n      <Descriptions.Item label=\"city\">{props.city}</Descriptions.Item>\n      <Descriptions.Item label=\"state\">{props.state}</Descriptions.Item>\n      <Descriptions.Item label=\"country\">{props.country}</Descriptions.Item>\n      <Descriptions.Item label=\"skillset\">{props.skillset}</Descriptions.Item>\n      <Descriptions.Item label=\"career objective\">\n        {props.career_objective}\n      </Descriptions.Item>\n    </Descriptions>\n  );\n}\n","import React from \"react\";\nimport { Descriptions } from \"antd\";\n\nexport default function(props) {\n  return (\n    <Descriptions title=\"Education\">\n      <Descriptions.Item label=\"college\">{props.college}</Descriptions.Item>\n      <Descriptions.Item label=\"major\">{props.major}</Descriptions.Item>\n      <Descriptions.Item label=\"location\">{props.location}</Descriptions.Item>\n      <Descriptions.Item label=\"degree\">{props.degree}</Descriptions.Item>\n      <Descriptions.Item label=\"year_of_passing\">{props.year_of_passing}</Descriptions.Item>    \n    </Descriptions>\n  );\n}\n","import React from \"react\";\nimport { Descriptions } from \"antd\";\n\nexport default function(props) {\n  return props.items.map((el, index) => (\n    <Descriptions title={`experience ${index + 1}`} key={el.id || index}>\n      <Descriptions.Item label=\"company_name\">{el.company_name}</Descriptions.Item>\n      <Descriptions.Item label=\"title\">{el.title}</Descriptions.Item>\n      <Descriptions.Item label=\"location\">{el.location}</Descriptions.Item>\n      <Descriptions.Item label=\"start_date\">{el.start_date}</Descriptions.Item>\n      <Descriptions.Item label=\"end_date\">{el.end_date}</Descriptions.Item>\n    </Descriptions>\n  ));\n}\n","import request from \"../../../utils/request\";\n\nexport const queryProfile = id => {\n  return request.get(`/student/${id}`);\n};\n\nexport const createProfile = (id, data) => {\n  return request.post(`/student/${id}`, data);\n};\n\nexport const updateProfile = (id, data) => {\n  return request.put(`/student/${id}`, data);\n};\n\nexport const queryApplications = uid => {\n  return request.get(`/student/${uid}/applications`);\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { push } from \"connected-react-router\";\n\nimport * as api from \"./service\";\n\nconst initialState = {\n  loading: false,\n  error: null\n};\n\nconst profileSlice = createSlice({\n  name: \"studentProfile\",\n  initialState,\n  reducers: {\n    asyncStart: state => ({\n      ...state,\n      loading: true,\n      error: null\n    }),\n    asyncFinish: state => ({\n      ...state,\n      loading: false,\n      error: null\n    }),\n    asyncError: state => ({\n      ...state,\n      loading: false,\n      error: null\n    }),\n    updateProfile: (state, action) => ({\n      ...state,\n      ...action.payload\n    })\n  }\n});\n\nconst { actions, reducer } = profileSlice;\n\nconst { asyncStart, asyncFinish, asyncError, updateProfile } = actions;\n\nconst effects = {\n  queryProfile: id => async dispatch => {\n    dispatch(asyncStart());\n    try {\n      const result = await api.queryProfile(id);\n      dispatch(updateProfile(result));\n      dispatch(asyncFinish());\n    } catch (e) {\n      dispatch(asyncError(e));\n      throw e;\n    }\n  },\n  createProfile: (id, data) => async dispatch => {\n    dispatch(asyncStart());\n    try {\n      const result = await api.createProfile(id, data);\n      dispatch(updateProfile(result));\n      dispatch(asyncFinish());\n      dispatch(push(\"/student/profile\"));\n    } catch (e) {\n      dispatch(asyncError(e));\n      throw e;\n    }\n  },\n  updateProfile: (id, data) => async dispatch => {\n    dispatch(asyncStart());\n    try {\n      const result = await api.updateProfile(id, data);\n      console.log('result:', result);\n      dispatch(updateProfile(result));\n      dispatch(asyncFinish());\n      dispatch(push(\"/student/profile\"));\n    } catch (e) {\n      dispatch(asyncError(e));\n      throw e;\n    }\n  }\n};\n\nexport { actions, reducer, effects };\n","/**\n * @file student user profile page\n * @description\n * Display if user has created a profile otherwise \n * allow user to add one by clicking \"create\" button\n */\n\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Button } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nimport ProfileBasic from \"./components/ProfileBasic\";\nimport ProfileEducation from \"./components/ProfileEducation\";\nimport ProfileExperience from \"./components/ProfileExperience\";\n\nimport { effects } from \"../model\";\n\nconst Profile = () => {\n  const { id, student } = useSelector(state => ({\n    id: state.user.id,\n    student: state.student\n  }));\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (id && !student.id) {\n      dispatch(effects.queryProfile(id));\n    }\n  }, [dispatch, id, student.id]);\n\n  if (student.loading) {\n    return <div>loading...</div>;\n  }\n\n  if (student.error) {\n    return <div>error</div>;\n  }\n\n  // create if no\n  if (!student.id) {\n    return (\n      <div>\n        <h3> You don't have a profile yet, please create one!</h3>\n        <Button type=\"primary\">\n          <Link to=\"/student/profile/create\">Create</Link>\n        </Button>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <ProfileBasic {...student.profileBasic} />\n      <ProfileEducation {...student.profileEducation} />\n      <ProfileExperience items={student.profileExperience} />\n      <Button type=\"primary\">\n        <Link to=\"/student/profile/edit\">Edit</Link>\n      </Button>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Form, Input, Button } from \"antd\";\n\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 8\n    }\n  }\n};\n\nconst ProfileForm = ({ onSubmit, initialValues = {} }) => {\n  const [form] = Form.useForm();\n\n  const onFinish = values => {\n    onSubmit && onSubmit(values);\n  };\n\n  return (\n    <div className=\"register-form\">\n      <Form\n        {...formItemLayout}\n        form={form}\n        name=\"register\"\n        onFinish={onFinish}\n        initialValues={initialValues}\n        scrollToFirstError\n      >\n        <Form.Item\n          label=\"name\"\n          name={[\"profileBasic\", \"name\"]}\n          rules={[\n            {\n              required: true,\n              message: \"Please input your nickname!\",\n              whitespace: true\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          label=\"birth_date\"\n          name={[\"profileBasic\", \"birth_date\"]}\n          rules={[\n            {\n              required: true,\n              message: \"Please input your birth_date!\",\n              whitespace: true\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"city\"\n          name={[\"profileBasic\", \"city\"]}\n          rules={[\n            {\n              required: true,\n              message: \"Please input your city!\",\n              whitespace: true\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"state\"\n          name={[\"profileBasic\", \"state\"]}\n          rules={[\n            {\n              required: true,\n              message: \"Please input your state!\",\n              whitespace: true\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"country\"\n          name={[\"profileBasic\", \"country\"]}\n          rules={[\n            {\n              required: true,\n              message: \"Please input your country!\",\n              whitespace: true\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"skillset\"\n          name={[\"profileBasic\", \"skillset\"]}\n          rules={[\n            {\n              required: true,\n              message: \"Please input your skillset!\",\n              whitespace: true\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"career_objective\"\n          name={[\"profileBasic\", \"career_objective\"]}\n          rules={[\n            {\n              required: true,\n              message: \"Please input your career_objective!\",\n              whitespace: true\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n       \n      </Form>\n    </div>\n  );\n};\n\nexport default ProfileForm;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { effects } from \"../../model\";\nimport ProfileForm from \"../components/ProfileForm\";\n//import EducationForm from \"../components/EducationForm\";\n\nexport default function() {\n  const { id  } = useSelector(state => ({\n    id: state.user.id,\n  }));\n  const dispatch = useDispatch();\n\n\n  const handleCreate = values => {\n    dispatch(\n        effects.createProfile(id, {\n            basic: {\n              ...values.profileBasic\n            },\n            education: {\n              college_name: \"University of Hogwarts\",\n              location: \"Scottish Highlands\",\n              degree: \"Master\",\n              major: \"Software Engineering\",\n              year_of_passing: \"2020-6-20\"\n              \n            },\n            experience: [\n              {\n                company_name: \"LinkedIn\",\n                title: \"sde intern\",\n                location: \"sunnyvale\",\n                start_date: \"2020-3-6\",\n                end_date: \"2020-12-12\"\n              }\n            ]\n          })\n    );\n  };\n\n  return (\n    <div>\n      <ProfileForm onSubmit={handleCreate} />      \n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { message } from 'antd';\n\nimport { effects } from \"../../model\";\nimport ProfileForm from \"../components/ProfileForm\";\n\nexport default function() {\n  const { id, student } = useSelector(state => ({\n    id: state.user.id,\n    student: state.student\n  }));\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (id && !student.id) {\n      dispatch(effects.queryProfile(id));\n    }\n  }, [dispatch, id, student.id]);\n\n  const handleUpdate = async values => {\n    try {\n      // TODO: TBC\n      await dispatch(\n        effects.updateProfile(id, {\n          basic: {\n            ...values.profileBasic,\n            birth_date: \"2020-3-6\"\n          },\n          education: {\n            ...student.profileEducation,\n            year_of_passing: \"2020-06-19\",\n            created_at: \"2020-03-11\",\n            update_at: \"2020-03-11\"\n          },\n          experience: []\n        })\n      );\n      message.success(\"Successfully updated.\");\n    } catch (e) {}\n  }\n\n  if (student.loading) {\n    return <div>loading...</div>;\n  }\n\n  if (student.error) {\n    return <div>error</div>;\n  }\n\n  return (\n    <div>\n      <ProfileForm initialValues={student} onSubmit={handleUpdate} />\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Table } from \"antd\";\nimport { useSelector } from \"react-redux\";\n\nimport * as api from \"../model/service\";\n\nexport default function ApplicationsPage() {\n  const [jobs, setJobs] = useState([]);\n  const user = useSelector(state => state.user);\n\n  useEffect(() => {\n    async function queryApplications() {\n      const jobs = await api.queryApplications(user.id);\n      setJobs(jobs);\n    }\n    if (user.id) queryApplications();\n  }, [user.id]);\n\n  const columns = [\n    {\n      title: \"job_id\",\n      dataIndex: \"job_id\",\n      key: \"job_id\"\n    },\n    {\n      title: \"status\",\n      dataIndex: \"status\",\n      key: \"status\"\n    }\n  ];\n\n  return (\n    <>\n      <Table\n        rowKey=\"id\"\n        columns={columns}\n        dataSource={jobs}\n        pagination={false}\n      />\n    </>\n  );\n}\n","import React from \"react\";\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\";\n\nimport BasicLayout from \"../../layouts/BasicLayout\";\n\nimport ProfilePage from \"./profile\";\nimport CreateProfilePage from \"./profile/create\";\nimport EditProfilePage from \"./profile/edit\";\nimport ApplicationPage from \"./application\";\n\nexport default function Routes() {\n  const { path } = useRouteMatch();\n\n  return (\n    <BasicLayout>\n      <Switch>\n        <Route exact path={`${path}/profile`}>\n          <ProfilePage />\n        </Route>\n        <Route path={`${path}/profile/create`}>\n          <CreateProfilePage />\n        </Route>\n        <Route path={`${path}/profile/edit`}>\n          <EditProfilePage />\n        </Route>\n        <Route path={`${path}/application`}>\n          <ApplicationPage />\n        </Route>\n        <Route render={() => <div>404 Not Found</div>} />\n      </Switch>\n    </BasicLayout>\n  );\n}\n","import React from \"react\";\nimport { Descriptions } from \"antd\";\n\nexport default function(props) {\n  return (\n    <Descriptions title=\"Basic Info\">\n      <Descriptions.Item label=\"name\">{props.name}</Descriptions.Item>\n      <Descriptions.Item label=\"location\">{props.location}</Descriptions.Item>\n      <Descriptions.Item label=\"description\">{props.description}</Descriptions.Item>\n      <Descriptions.Item label=\"contact_email\">{props.contact_email}</Descriptions.Item>\n      <Descriptions.Item label=\"contact_phone\">{props.contact_phone}</Descriptions.Item>\n    </Descriptions>\n  );\n}","import request from \"../../../utils/request\";\n\n// profile related\nexport const queryProfile = id => {\n  return request.get(`/company/${id}`);\n};\n\nexport const createProfile = (id, data) => {\n  return request.post(`/company/${id}`, data);\n};\n\nexport const updateProfile = (id, data) => {\n  return request.put(`/company/${id}`, data);\n};\n\nexport const queryJob = uid => {\n    return request.get(`/company/${uid}/job`);\n  };\n  \n  export const queryJobById = jid => {\n    return request.get(`/job/${jid}`);\n  };\n  \n  export const createJob = (uid, data) => {\n    // TODO: not id in url\n    return request.post(`/job/${uid}`, data);\n  };\n  \n  export const updateJob = (jid, data) => {\n    return request.put(`/job/${jid}`, data);\n  };\n\n  export const queryJobApplications = (uid, jid) => {\n    return request.get(`/company/${uid}/job/${jid}/application`);\n  };\n  \n  export const updateJobApplicationStatus = (uid, jid, aid, data) => {\n    return request.put(`/company/${uid}/job/${jid}/application/${aid}`, data);\n  };","import { createSlice } from \"@reduxjs/toolkit\";\nimport { push } from \"connected-react-router\";\n\nimport * as api from \"./service\";\n\nconst initialState = {\n  loading: false,\n  error: null\n};\n\nconst profileSlice = createSlice({\n  name: \"company\",\n  initialState,\n  reducers: {\n    asyncStart: state => ({\n      ...state,\n      loading: true,\n      error: null\n    }),\n    asyncFinish: state => ({\n      ...state,\n      loading: false,\n      error: null\n    }),\n    asyncError: state => ({\n      ...state,\n      loading: false,\n      error: null\n    }),\n    updateProfile: (state, action) => ({\n      ...state,\n      ...action.payload\n    })\n  }\n});\n\nconst { actions, reducer } = profileSlice;\n\nconst { asyncStart, asyncFinish, asyncError, updateProfile } = actions;\n\nconst effects = {\n  queryProfile: id => async dispatch => {\n    dispatch(asyncStart());\n    try {\n      const result = await api.queryProfile(id);\n      dispatch(updateProfile(result));\n      dispatch(asyncFinish());\n    } catch (e) {\n      dispatch(asyncError(e));\n      throw e;\n    }\n  },\n  createProfile: (id, data) => async dispatch => {\n    dispatch(asyncStart());\n    try {\n      const result = await api.createProfile(id, data);\n      dispatch(updateProfile(result));\n      dispatch(asyncFinish());\n      dispatch(push(\"/company/profile\"));\n    } catch (e) {\n      dispatch(asyncError(e));\n      throw e;\n    }\n  },\n  updateProfile: (id, data) => async dispatch => {\n    dispatch(asyncStart());\n    try {\n      const result = await api.updateProfile(id, data);\n      console.log(\"result:\", result);\n      dispatch(updateProfile(result));\n      dispatch(asyncFinish());\n      dispatch(push(\"/company/profile\"));\n    } catch (e) {\n      dispatch(asyncError(e));\n      throw e;\n    }\n  }\n};\nexport { actions, reducer, effects };","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Button } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nimport ProfileBasic from \"./components/ProfileBasic\";\n\nimport { effects } from \"../model\";\n\nconst Profile = () => {\n  const { id, company } = useSelector(state => ({\n    id: state.user.id,\n    company: state.company\n  }));\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (id && !company.id) {\n      dispatch(effects.queryProfile(id));\n    }\n  }, [dispatch, id, company.id]);\n\n  if (company.loading) {\n    return <div>loading...</div>;\n  }\n\n  if (company.error) {\n    return <div>error</div>;\n  }\n\n  // 没有简历 id\n  if (!company.id) {\n    return (\n      <div>\n        <h3> You don't have any profile, please create it!</h3>\n        <Button type=\"primary\">\n          <Link to=\"/company/profile/create\">Create</Link>\n        </Button>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <ProfileBasic {...company} />\n      <Button type=\"primary\">\n        <Link to=\"/company/profile/edit\">Edit</Link>\n      </Button>\n    </div>\n  );\n};\n\nexport default Profile;","import React from \"react\";\nimport { Form, Input, Button } from \"antd\";\n\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 8\n    }\n  }\n};\n\nconst ProfileForm = ({ onSubmit, initialValues = {} }) => {\n  const [form] = Form.useForm();\n\n  const onFinish = values => {\n    onSubmit && onSubmit(values);\n  };\n\n  return (\n    <div className=\"register-form\">\n      <Form\n        {...formItemLayout}\n        form={form}\n        name=\"company_profile\"\n        onFinish={onFinish}\n        initialValues={initialValues}\n        scrollToFirstError\n      >\n        <Form.Item\n          label=\"name\"\n          name=\"name\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your name!\",\n              whitespace: true\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          label=\"location\"\n          name=\"location\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your location!\",\n              whitespace: true\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"description\"\n          name=\"description\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your description!\",\n              whitespace: true\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"contact_email\"\n          name=\"contact_email\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your contact_email!\",\n              whitespace: true\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"contact_phone\"\n          name=\"contact_phone\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your contact_phone!\",\n              whitespace: true\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n\n        <Form.Item {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default ProfileForm;","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { effects } from \"../../model\";\nimport ProfileForm from \"../components/ProfileForm\";\n\nexport default function() {\n  const { id } = useSelector(state => ({\n    id: state.user.id\n  }));\n  const dispatch = useDispatch();\n\n  const handleCreate = values => {\n    dispatch(\n      effects.createProfile(id, {\n        ...values\n      })\n    );\n  };\n\n  return (\n    <div>\n      <ProfileForm onSubmit={handleCreate} />\n    </div>\n  );\n}","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { message } from \"antd\";\n\nimport { effects } from \"../../model\";\nimport ProfileForm from \"../components/ProfileForm\";\n\nexport default function() {\n  const { id, company } = useSelector(state => ({\n    id: state.user.id,\n    company: state.company\n  }));\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (id && !company.id) {\n      dispatch(effects.queryProfile(id));\n    }\n  }, [dispatch, id, company.id]);\n\n  const handleUpdate = async values => {\n    try {\n      await dispatch(\n        effects.updateProfile(id, {\n          ...values\n        })\n      );\n      message.success(\"Updated successfully\");\n    } catch (e) {}\n  };\n\n  if (company.loading) {\n    return <div>loading...</div>;\n  }\n\n  if (company.error) {\n    return <div>error</div>;\n  }\n\n  return (\n    <div>\n      <ProfileForm initialValues={company} onSubmit={handleUpdate} />\n    </div>\n  );\n}","import React from \"react\";\nimport { Table, Divider } from \"antd\";\nimport { useSelector } from 'react-redux';\nimport { Link } from \"react-router-dom\";\n\nexport default function(props) {\n  const user = useSelector(state => state.user);\n  const columns = [\n    {\n      title: \"Title\",\n      dataIndex: \"title\",\n      key: \"title\"\n    },\n    {\n      title: \"Location\",\n      dataIndex: \"location\",\n      key: \"location\"\n    },\n    {\n      title: \"Salary\",\n      dataIndex: \"salary\",\n      key: \"salary\"\n    },\n    {\n      title: \"job_desc\",\n      dataIndex: \"job_description\",\n      key: \"job_description\"\n    },\n    {\n      title: \"application_dealine\",\n      dataIndex: \"application_dealine\",\n      key: \"application_dealine\"\n    },\n    {\n      title: \"Action\",\n      key: \"action\",\n      render: (text, record) => (\n        <span>\n          <Link to={`/company/job/${record.id}`}>modify</Link>\n          <Divider type=\"vertical\" />\n          <Link to={`/company/${user.id}/job/${record.id}/applications`}>applications</Link>\n        </span>\n      )\n    }\n  ];\n\n  return (\n    <Table\n      rowKey=\"id\"\n      dataSource={props.list}\n      columns={columns}\n      pagination={false}\n    />\n  );\n};","import { createSlice } from \"@reduxjs/toolkit\";\nimport { push } from \"connected-react-router\";\n\nimport * as api from \"./service\";\n\nconst initialState = {\n  loading: false,\n  error: null,\n  list: [],\n  application: []\n};\n\nconst jobSlice = createSlice({\n  name: \"job\",\n  initialState,\n  reducers: {\n    asyncStart: state => ({\n      ...state,\n      loading: true,\n      error: null\n    }),\n    asyncFinish: state => ({\n      ...state,\n      loading: false,\n      error: null\n    }),\n    asyncError: state => ({\n      ...state,\n      loading: false,\n      error: null\n    }),\n    updateOne: (state, action) => {\n      const index = state.list.findIndex(el => el.id === action.payload.id);\n      state.list.splice(index, 1, action.payload);\n    },\n    updateList: (state, action) => ({\n      ...state,\n      list: [...action.payload]\n    }),\n    updateApplication: (state, action) => ({\n      ...state,\n      application: action.payload\n    }),\n    updateApplicationOne: (state, action) => {\n      const index = state.application.findIndex(\n        el => el.id === action.payload.id\n      );\n      state.application.splice(index, 1, action.payload);\n    }\n  }\n});\n\nconst { actions, reducer } = jobSlice;\n\nconst {\n  asyncStart,\n  asyncFinish,\n  asyncError,\n  updateList,\n  updateOne,\n  updateApplication,\n  updateApplicationOne\n} = actions;\n\nconst effects = {\n  queryJob: id => async dispatch => {\n    dispatch(asyncStart());\n    try {\n      const result = await api.queryJob(id);\n      dispatch(updateList(result));\n      dispatch(asyncFinish());\n    } catch (e) {\n      dispatch(asyncError(e));\n      throw e;\n    }\n  },\n  queryJobById: id => async dispatch => {\n    dispatch(asyncStart());\n    try {\n      const result = await api.queryJobById(id);\n      dispatch(updateOne(result));\n      dispatch(asyncFinish());\n      return result;\n    } catch (e) {\n      dispatch(asyncError(e));\n      throw e;\n    }\n  },\n  createJob: (id, data) => async dispatch => {\n    dispatch(asyncStart());\n    try {\n      const result = await api.createJob(id, data);\n      dispatch(updateOne(result));\n      dispatch(asyncFinish());\n\n      dispatch(push(\"/company/job\"));\n    } catch (e) {\n      dispatch(asyncError(e));\n      throw e;\n    }\n  },\n  updateJob: (jid, data) => async dispatch => {\n    dispatch(asyncStart());\n    try {\n      const result = await api.updateJob(jid, data);\n      dispatch(updateOne(result));\n      dispatch(asyncFinish());\n      dispatch(push(\"/company/job\"));\n    } catch (e) {\n      dispatch(asyncError(e));\n      throw e;\n    }\n  },\n  queryApplication: (uid, jid) => async dispatch => {\n    dispatch(asyncStart());\n    try {\n      const result = await api.queryJobApplications(uid, jid);\n      dispatch(updateApplication(result));\n      dispatch(asyncFinish());\n    } catch (e) {\n      dispatch(asyncError(e));\n      throw e;\n    }\n  },\n  changeApplicationStatus: (uid, jid, aid, data) => async dispatch => {\n    dispatch(asyncStart());\n    try {\n      const result = await api.updateJobApplicationStatus(uid, jid, aid, data);\n      dispatch(updateApplicationOne(result));\n      dispatch(asyncFinish());\n    } catch (e) {\n      dispatch(asyncError(e));\n      throw e;\n    }\n  }\n};\n\nexport { actions, reducer, effects };","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Button } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nimport JobList from \"./components/JobList\";\n\nimport { effects } from \"../model/job\";\n\nconst Job = () => {\n  const { id, job } = useSelector(state => ({\n    id: state.user.id,\n    job: state.job\n  }));\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n\n    if (id && job.list.length === 0) {\n      dispatch(effects.queryJob(id));\n    }\n  }, [dispatch, id, job.list.length]);\n\n  if (job.loading) {\n    return <div>loading...</div>;\n  }\n\n  if (job.error) {\n    return <div>error</div>;\n  }\n\n  if (job.length === 0) {\n    return (\n      <div>\n        <h3> You don't have any job, please create it!</h3>\n        <Button type=\"primary\">\n          <Link to=\"/company/job/create\">Create</Link>\n        </Button>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {/* job list*/}\n      <JobList list={job.list} />\n    </div>\n  );\n};\n\nexport default Job;","import React from \"react\";\nimport { Form, Input, Select, InputNumber, Button } from \"antd\";\n\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 8\n    }\n  }\n};\n\nconst JobForm = ({ onSubmit, initialValues = {} }) => {\n  const [form] = Form.useForm();\n\n  const onFinish = values => {\n    onSubmit && onSubmit(values);\n  };\n\n  return (\n    <div className=\"register-form\">\n      <Form\n        {...formItemLayout}\n        form={form}\n        name=\"company_profile\"\n        onFinish={onFinish}\n        initialValues={initialValues}\n        scrollToFirstError\n      >\n        <Form.Item\n          label=\"title\"\n          name=\"title\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your title!\",\n              whitespace: true\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Category\" name=\"category\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your category!\",\n            whitespace: true\n          }\n        ]}>\n        <Select>\n          <Select.Option value=\"full_time\">Full-time</Select.Option>\n          <Select.Option value=\"part_time\">Part-time</Select.Option>\n          <Select.Option value=\"intern\">Intern</Select.Option>\n          <Select.Option value=\"on_campus\">On-campus</Select.Option>\n\n        </Select>\n        </Form.Item>\n    \n        <Form.Item\n          label=\"salary\"\n          name=\"salary\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your salary!\"\n            }\n          ]}\n        >\n          <InputNumber />\n        </Form.Item>\n\n        <Form.Item\n          label=\"location\"\n          name=\"location\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your location!\",\n              whitespace: true\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"job_description\"\n          name=\"job_description\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your job_description!\",\n              whitespace: true\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          label=\"application_deadline\"\n          name=\"application_deadline\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your application_deadline!\",\n              whitespace: true\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default JobForm;","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { effects } from \"../../model/job\";\nimport JobForm from \"../components/JobForm\";\n\nexport default function() {\n  const { id } = useSelector(state => ({\n    id: state.user.id\n  }));\n  const dispatch = useDispatch();\n\n  const handleCreate = values => {\n    dispatch(\n      effects.createJob(id, {\n        ...values,\n        application_deadline: \"2020-6-20\"\n      })\n    );\n  };\n\n  return (\n    <div>\n      <JobForm onSubmit={handleCreate} />\n    </div>\n  );\n}","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { message } from \"antd\";\nimport { useParams } from \"react-router-dom\";\n\nimport { effects } from \"../../model/job\";\nimport JobForm from \"../components/JobForm\";\n\nexport default function() {\n  const { jid } = useParams();\n\n  const { job } = useSelector(state => ({\n    job: state.job\n  }));\n  // Filter job\n  const currentJob = job.list.find(el => el.id === Number(jid));\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!currentJob) {\n      dispatch(effects.queryJobById(jid));\n    }\n  }, [currentJob, dispatch, jid]);\n\n  const handleUpdate = async values => {\n    try {\n      await dispatch(\n        effects.updateJob(jid, {\n          ...values,\n          \"application_deadline\": \"2020-6-20\"\n        })\n      );\n      message.success(\"Update successfully!\");\n    } catch (e) {}\n  };\n\n  if (job.loading) {\n    return <div>loading...</div>;\n  }\n\n  if (job.error) {\n    return <div>error</div>;\n  }\n\n  return (\n    <div>\n      <JobForm initialValues={currentJob} onSubmit={handleUpdate} />\n    </div>\n  );\n}","import React from \"react\";\nimport { Modal, Form, Select } from \"antd\";\n\nconst { Option } = Select;\n\nconst CollectionSubmitForm = ({ initial, visible, onSubmit, onCancel }) => {\n  const [form] = Form.useForm();\n  return (\n    <Modal\n      visible={visible}\n      title=\"Change status\"\n      okText=\"Change\"\n      cancelText=\"Cancel\"\n      onCancel={onCancel}\n      onOk={() => {\n        form\n          .validateFields()\n          .then(values => {\n            form.resetFields();\n            onSubmit(values);\n          })\n          .catch(info => {\n            console.log(\"Validate Failed:\", info);\n          });\n      }}\n    >\n      <Form\n        form={form}\n        layout=\"vertical\"\n        name=\"form_in_modal\"\n        initialValues={initial}\n      >\n        <Form.Item\n          name=\"status\"\n          label=\"status\"\n          rules={[\n            {\n              required: true,\n              message: \"Please select!\"\n            }\n          ]}\n        >\n          <Select\n            placeholder=\"Select a option and change input text above\"\n            allowClear\n          >\n            <Option value=\"pending\">pending</Option>\n            <Option value=\"reviewed\">reviewed</Option>\n            <Option value=\"declined\">declined</Option>\n          </Select>\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default CollectionSubmitForm;","import React, { useState } from \"react\";\nimport { Table, Button, message } from \"antd\";\nimport { useDispatch } from \"react-redux\";\n\nimport { effects } from \"../../model/job\";\n\nimport ApplicationStatusForm from \"./ApplicationStatusForm\";\n\nexport default function(props) {\n  const [visible, setVisible] = useState(false);\n  const [current, setCurrent] = useState(null);\n  const dispatch = useDispatch();\n\n  const columns = [\n    {\n      title: \"id\",\n      dataIndex: \"id\",\n      key: \"id\"\n    },\n    {\n      title: \"resume\",\n      dataIndex: \"resume\",\n      key: \"resume\"\n    },\n    {\n      title: \"status\",\n      dataIndex: \"status\",\n      key: \"status\"\n    },\n    {\n      title: \"Action\",\n      key: \"action\",\n      render: (text, record) => (\n        <span>\n          <Button\n            onClick={() => {\n              setCurrent(record);\n              setVisible(true);\n            }}\n          >\n            Change Status\n          </Button>\n        </span>\n      )\n    }\n  ];\n\n  const handleSubmit = async values => {\n    console.log(\"handleSubmit:\", values);\n    const { uid, jid } = props;\n    const { id: aid } = current;\n\n    try {\n      await dispatch(effects.changeApplicationStatus(uid, jid, aid, values));\n      message.success(\"change success\");\n    } catch (e) {}\n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n    setCurrent(null);\n  };\n\n  return (\n    <>\n      <Table\n        rowKey=\"id\"\n        dataSource={props.list}\n        columns={columns}\n        pagination={false}\n      />\n      <ApplicationStatusForm\n        visible={visible}\n        initial={current}\n        onSubmit={handleSubmit}\n        onCancel={handleCancel}\n      />\n    </>\n  );\n}","/**\n * @file List of applicatoins for one job\n * @description\n */\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Button } from \"antd\";\nimport { Link, useParams } from \"react-router-dom\";\n\nimport JobApplications from \"../components/JobApplications\";\n\nimport { effects } from \"../../model/job\";\n\nconst Job = () => {\n    const { uid, jid } = useParams();\n  \n    const { job, application } = useSelector(state => ({\n      job: state.job,\n      application: state.job.application\n    }));\n\n    const dispatch = useDispatch();\n\n    console.log(\"Hi\");\n    useEffect(() => {\n    dispatch(effects.queryApplication(uid, jid));\n    }, [dispatch, uid, jid]);\n\n    if (job.loading) {\n    return <div>loading...</div>;\n    }\n\n    if (job.error) {\n    return <div>error</div>;\n    }\n\n    if (application.length === 0) {\n    return (\n        <div>\n        <h3> This job has no application!</h3>\n        <Button type=\"primary\">\n            <Link to=\"/company/job\">Go Back</Link>\n        </Button>\n        </div>\n    );\n    }\n\n    return (\n    <div>\n        {/* application list*/}\n        <JobApplications list={application} uid={uid} jid={jid} />\n    </div>\n    );\n};\n\nexport default Job;","import React from \"react\";\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\";\n\nimport BasicLayout from \"../../layouts/BasicLayout\";\n\nimport ProfilePage from \"./profile\";\nimport CreateProfilePage from \"./profile/create\";\nimport EditProfilePage from \"./profile/edit\";\nimport JobPage from \"./job\";\nimport CreateJobPage from \"./job/create\";\nimport EditJobPage from \"./job/edit\";\nimport JobApplicationsPage from \"./job/applications\";\n\nexport default function Routes() {\n  const { path } = useRouteMatch();\n\n  return (\n    <BasicLayout>\n      <Switch>\n        {/* company profile */}\n        <Route exact path={`${path}/profile`}>\n          <ProfilePage />\n        </Route>\n        <Route path={`${path}/profile/create`}>\n          <CreateProfilePage />\n        </Route>\n        <Route path={`${path}/profile/edit`}>\n          <EditProfilePage />\n        </Route>\n        {/* all jobs */}\n        <Route exact path={`${path}/job`}>\n          <JobPage />\n        </Route>\n        <Route path={`${path}/job/create`}>\n          <CreateJobPage />\n        </Route>\n        <Route path={`${path}/job/:jid`}>\n          <EditJobPage />\n        </Route>\n        {/* one job relared */}\n        <Route path={`${path}/:uid/job/:jid/applications`}>\n          <JobApplicationsPage />\n        </Route>\n        <Route render={() => <div>404 Not Found</div>} />\n      </Switch>\n    </BasicLayout>\n  );\n}\n","import React from \"react\";\nimport { Form, Row, Col, Input, Button } from \"antd\";\n\nconst AdvancedSearchForm = props => {\n  const [form] = Form.useForm();\n\n  const onFinish = values => {\n    props.onSubmit && props.onSubmit(values);\n  };\n\n  return (\n    <Form\n      form={form}\n      name=\"advanced_search\"\n      className=\"ant-advanced-search-form\"\n      onFinish={onFinish}\n    >\n      <Row gutter={24}>\n        <Col span={8}>\n          <Form.Item\n            name=\"keyword\"\n            label=\"keyword\"\n            rules={[\n              {\n                required: true,\n                message: \"Input something!\"\n              }\n            ]}\n          >\n            <Input placeholder=\"search with title or company_name\" />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item name=\"jobCategory\" label=\"category\">\n            <Input placeholder=\"job category\" />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item name=\"jobLocation\" label=\"location\">\n            <Input placeholder=\"job location\" />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24} style={{ textAlign: \"right\" }}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Search\n          </Button>\n          <Button\n            style={{ marginLeft: 8 }}\n            onClick={() => {\n              form.resetFields();\n            }}\n          >\n            Clear\n          </Button>\n        </Col>\n      </Row>\n    </Form>\n  );\n};\n\nexport default AdvancedSearchForm;\n","import React, { useState } from \"react\";\nimport { Table, Popconfirm, message, Button } from \"antd\";\nimport { useSelector } from \"react-redux\";\n\nimport SearchForm from \"./components/SearchForm\";\nimport BasicLayout from \"../../layouts/BasicLayout\";\n\nimport * as api from \"./service\";\n\nexport default function SearchPage(props) {\n  const [jobs, setJobs] = useState([]);\n  const user = useSelector(state => state.user);\n\n  const handleSubmit = async values => {\n    try {\n      const jobs = await api.queryJobs(values);\n      setJobs(jobs);\n    } catch (e) {\n      console.log(\"e:\", e);\n    }\n  };\n\n  const handleApply = async record => {\n    try {\n      await api.applyJob(user.id, record.id);\n      message.success(\"Applied Successfully!\");\n    } catch (e) {\n      console.error(\"e:\", e);\n    }\n  };\n\n  const columns = [\n    {\n      title: \"Title\",\n      dataIndex: \"title\",\n      key: \"title\"\n    },\n    {\n      title: \"Location\",\n      dataIndex: \"location\",\n      key: \"location\"\n    },\n    {\n      title: \"Salary\",\n      dataIndex: \"salary\",\n      key: \"salary\"\n    },\n    {\n      title: \"job desc\",\n      dataIndex: \"job_description\",\n      key: \"job_description\"\n    },\n    {\n      title: \"application_deadline\",\n      dataIndex: \"application_deadline\",\n      key: \"application_deadline\"\n    },\n    {\n      title: \"Action\",\n      key: \"action\",\n      render: (text, record) => (\n        <Popconfirm\n          title=\"Want to apply?\"\n          onConfirm={() => handleApply(record)}\n          okText=\"Yes\"\n          cancelText=\"No\"\n        >\n          <Button>apply</Button>\n        </Popconfirm>\n      )\n    }\n  ];\n\n  return (\n    <BasicLayout>\n      <SearchForm onSubmit={handleSubmit} />\n\n      <Table rowKey=\"id\" columns={columns} dataSource={jobs} />\n    </BasicLayout>\n  );\n}\n","import request from \"../../utils/request\";\nimport qs from 'qs';\n\nexport const queryJobs = (params) => {\n  return request.get(`/search?${qs.stringify(params)}`);\n};\n\nexport const applyJob = (uid,jid) => {\n  return request.post(`/student/${uid}/job/${jid}/apply`, {\n    resume: \"TBD\"\n  });\n};\n","import React from \"react\";\nimport { Route, Switch, Redirect} from \"react-router\"; \n//import { BrowserRouter } from \"react-router-dom\";\n\nimport UserPage from \"../../pages/user\";\nimport HomePage from \"../../pages/home\";\nimport StudentPage from \"../../pages/student\";\nimport CompanyPage from \"../../pages/company\";\nimport SearchPage from \"../../pages/search\";\n\nexport default function SiteRoute(){\n    return (\n        <Switch>\n            <Route path=\"/home\">\n            <HomePage />\n            </Route>\n            <Route path=\"/user\">\n            <UserPage />\n            </Route>\n            <Route path=\"/student\">\n            <StudentPage />\n            </Route>\n            <Route path=\"/company\">\n            <CompanyPage />\n            </Route>\n            <Route path=\"/search\">\n            <SearchPage />\n            </Route>\n            <Redirect to=\"/home\"/>\n        </Switch>\n    );\n}","import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\n\nimport { history } from \"../../utils/history\";\nimport { reducer as globalReducer } from \"./model\";\n\nimport { reducer as userReducer } from \"../../pages/user/model\";\nimport { reducer as studentReducer } from \"../../pages/student/model\";\nimport { reducer as companyReducer } from \"../../pages/company/model\";\nimport { reducer as jobReducer } from \"../../pages/company/model/job\";\n\nconst createRootReducer = history => \n    combineReducers ({\n        router: connectRouter(history),\n        global: globalReducer,\n        user: userReducer,\n        student: studentReducer,\n        company: companyReducer,\n        job: jobReducer\n})\n\nconst reducer = createRootReducer(history);\n\nexport default reducer;","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    count: 0\n};\n\nconst globalSlice = createSlice({\n    name: \"global\",\n    initialState,\n    reducers: {\n        increment: state => ({\n            ...state,\n            count: state.count + 1\n        })\n    }\n});\n\nconst { actions, reducer } = globalSlice;\n\nexport { actions, reducer };","import { configureStore,  getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { routerMiddleware } from \"connected-react-router\";\n import { history } from \"../../utils/history\";\n\nimport rootReducer  from \"./reducer\";\nconst middleware = [\n    routerMiddleware(history),\n    ...getDefaultMiddleware()\n];\n\nconst enhancers = [];\n\nexport default function configureAppStore(preloadedState){\n    const store = configureStore({\n        reducer: rootReducer,\n        middleware,\n        preloadedState,\n        enhancers\n    });\n\n    if (process.env.NODE_ENV !== \"production\" && module.hot) {\n        module.hot.accept(\"./reducer\", () => store.replaceReducer(rootReducer));\n      }\n    \n      return store;\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './Root';\nimport configStore from \"./common/redux/configStore\";\nimport './styles/global.css';\n\nconst store = configStore();\n\n ReactDOM.render(<Root store={store}/>, document.getElementById('root'));\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { history } from \"./utils/history\";\nimport { ConnectedRouter } from \"connected-react-router\";\n\nimport Routes from \"./common/routes\";\n\nexport default function Root(props) {\n    return (\n        <Provider store={props.store}>\n        <ConnectedRouter history={history}>\n        <Routes />\n        </ConnectedRouter>\n        </Provider>\n    );\n}"],"sourceRoot":""}